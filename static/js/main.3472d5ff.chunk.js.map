{"version":3,"sources":["App.js","index.js"],"names":["CHARACTERS","id","name","hashtag","enc","txt","encodeURIComponent","imgUrl","concat","process","tweetUrl","characters","n","length","hashtags","map","c","join","url","window","location","href","msg","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleToggleStatus","setState","prev","char","objectSpread","willDie","updateUrl","entry","state","_this2","fallen","filter","react_default","a","createElement","className","_ref","key","onClick","style","height","src","alt","width","i","esm","content","arrow","rel","target","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3472d5ff.chunk.js","sourcesContent":["import Tippy from \"@tippy.js/react\";\nimport React, { Component } from \"react\";\n\nconst CHARACTERS = [\n  { id: \"Arya\", name: \"Arya\", hashtag: \"#AryaStark\" },\n  { id: \"BranStark\", name: \"Bran\", hashtag: \"#BranStark\" },\n  { id: \"Brienne\", name: \"Brienne\", hashtag: \"#BrienneOfTarth\" },\n  { id: \"Cersei\", name: \"Cersei\", hashtag: \"#CerseiLannister\" },\n  { id: \"Daenery\", name: \"Daenerys\", hashtag: \"#DaenerysTargaryen\" },\n  { id: \"Davos\", name: \"Davos\", hashtag: \"#DavosSeaworth\" },\n  { id: \"Euron\", name: \"Euron\", hashtag: \"#EuronGreyjoy\" },\n  { id: \"Greyworm\", name: \"Greyworm\", hashtag: \"#Greyworm\" },\n  { id: \"JaimeLannister\", name: \"Jaime\", hashtag: \"#JaimeLannister\" },\n  { id: \"JohnSnow\", name: \"John Snow\", hashtag: \"#JonSnow\" },\n  { id: \"Jorah\", name: \"Jorah\", hashtag: \"#JorahMormont\" },\n  { id: \"Missandei\", name: \"Missandei\", hashtag: \"#Missandei\" },\n  { id: \"NightKing\", name: \"Night King\", hashtag: \"#NightKing\" },\n  { id: \"RedWoman\", name: \"Melisandre\", hashtag: \"#Melisandre\" },\n  { id: \"SamTarly\", name: \"Sam\", hashtag: \"#SamwellTarly\" },\n  { id: \"Sansa\", name: \"Sansa\", hashtag: \"#SansaStark\" },\n  { id: \"TheHound\", name: \"The Hound\", hashtag: \"#TheHound\" },\n  { id: \"Theon\", name: \"Theon\", hashtag: \"#TheonGreyjoy\" },\n  { id: \"TyrionLannister\", name: \"Tyrion\", hashtag: \"#TyrionLannister\" },\n  { id: \"Varys\", name: \"Varys\", hashtag: \"#Varys\" }\n];\n\nconst enc = txt => encodeURIComponent(txt);\n\nconst imgUrl = id => `${process.env.PUBLIC_URL}/img/characters/${id}.png`;\n\nconst tweetUrl = characters => {\n  const n = characters.length;\n  const hashtags = characters.map(c => c.hashtag).join(\", \");\n  const url = window.location.href;\n\n  const msg = `I think ${n} main character${\n    n === 1 ? \" is\" : \"s are\"\n  } going to die in the next GoT episode (Battle of Winterfell)... ${hashtags}`;\n\n  return `https://twitter.com/intent/tweet?text=${enc(msg)}&url=${enc(url)}`;\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    const characters = CHARACTERS.map(entry => ({ ...entry, willDie: false }));\n    this.state = { characters };\n  }\n\n  handleToggleStatus = id => () => {\n    this.setState(\n      prev => ({\n        characters: prev.characters.map(char =>\n          char.id === id ? { ...char, willDie: !char.willDie } : char\n        )\n      }),\n      this.updateUrl\n    );\n  };\n\n  updateUrl = () => {};\n\n  render() {\n    const { characters } = this.state;\n    const fallen = characters.filter(c => c.willDie);\n\n    return (\n      <div className=\"p2 mx-auto container app\">\n        <header className=\"mb2\">\n          <h1 className=\"m0 sm-h0 serif\">The Winterfallen</h1>\n          <p className=\"m0 h5 sm-h4\">\n            Predict who will die in the upcoming <em>Battle of Winterfell</em>\n          </p>\n        </header>\n        <div className=\"flex flex-wrap mxn1 mb2  pt1\">\n          {characters.map(({ id, name, willDie }) => (\n            <div key={id} className=\"col-6 sm-col-4 px1 mb2\">\n              <button\n                className={`btn p1 h6 caps col-12 ${\n                  willDie ? \"btn-danger\" : \"btn-success\"\n                }`}\n                onClick={this.handleToggleStatus(id)}\n                style={{ height: 48 }}\n              >\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center\">\n                    <img\n                      key={id}\n                      className=\"mr05\"\n                      src={imgUrl(id)}\n                      alt={name}\n                      width={30}\n                      height={30}\n                    />\n                    <span className=\"truncate\">{name}</span>\n                  </div>\n                  <span className=\"h2\">{willDie ? \"ðŸ˜µ\" : \"ðŸ™‚\"}</span>\n                </div>\n              </button>\n            </div>\n          ))}\n        </div>\n        <div className=\"p2 rounded results\">\n          <div>\n            I think <strong>{fallen.length}</strong> main{\" \"}\n            {fallen.length === 1 ? \"character is\" : \"characters are\"} going to\n            die in the next GoT episode...\n          </div>\n          {fallen.length > 0 && (\n            <div className=\"mt1 flex flex-wrap\">\n              {fallen.map((char, i) => [\n                i > 0 && <span className=\"mr05\">,</span>,\n                <span className=\"flex-inline items-center\">\n                  <img\n                    className=\"mr01\"\n                    src={imgUrl(char.id)}\n                    alt=\"\"\n                    width={18}\n                    height={18}\n                  />\n                  <span>{char.name}</span>\n                </span>\n              ])}\n            </div>\n          )}\n          <div className=\"mt1\">\n            <Tippy\n              content=\"The super cool character emojis will show up in your tweet once it's published to Twitter if you use the suggested hashtags!\"\n              className=\"tooltip\"\n              arrow={true}\n            >\n              <a\n                className=\"black bold h6\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n                href={tweetUrl(fallen)}\n              >\n                Share on Twitter\n              </a>\n            </Tippy>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport \"ace-css/css/ace.min.css\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}